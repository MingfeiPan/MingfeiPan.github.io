<!-----
layout: post
title: 一次面试
category: experience
tag : experience
----->

去了某二手车大厂面试, 怎么说呢, 一言难尽。 一句话说就是我搞砸了两道非常简单的题...好吧把题想复杂了, 一面的大佬, 人很随和, 不过貌似看错了我的简历, 工作经验活活多看了两年, 然后就问的问题就真的古怪了, 有的老哥不喜欢上来就给份基础题让你做的那种面试, 但是下午我坐在那里, 真的希望能给我份题, 好歹我能写点什么, 按照这个基础来问我, 哪怕是php error_reporting(2047)这种问题呢, 然而并没有, 问的我焦头烂额, 应接不暇, 印象最深的是一直在纠结一个"高可用"这个词, 我真的一直误会了这个词的真实用意

`计算机系统的可用性用平均无故障时间（MTTF）来度量，即计算机系统平均能够正常运行多长时间，才发生一次故障。系统的可用性越高，平均无故障时间越长。可维护性用平均维修时间（MTTR）来度量，即系统发生故障后维修和重新恢复正常运行平均花费的时间。系统的可维护性越好，平均维修时间越短。计算机系统的可用性定义为：MTTF/(MTTF+MTTR) * 100%。由此可见，计算机系统的可用性定义为系统保持正常运行时间的百分比`  

然后就被大佬一直追问到无限狼狈, 大佬又问我kafka, 我现在的公司还在用mysql作队列啊!!!, 我去哪里搞kafka的工程经验呢, 聊了大概一个小时之后, 我脑子已经晕晕乎乎了(下午两点面试, 路程两个半小时, 尴尬的1b没吃早饭午饭), 这时候大佬问了我两个很基础的题, ...悲剧的我全都答错了, 只感觉自己好蠢, 第一个用lambda写个阶乘

```
import functools
n = 10
ret = functools.reduce(lambda a,b : a*b, range(1,n+1))
print(ret)
```
真的算是大佬给我面子问了个傻子题, 但是我真的是没写对, 都忘了自己写了个什么垃圾玩意, 第二个问题是个半傻子题, 给定一个数组[1,2,3,-1,-3,0,-5]找出连续和最大的一组数, 好吧, 我又答了个非常蠢的答案, 最后连暴力破解(按1..(n-1)长度分别分组, 把每组所有情况都算出来去找max, O(n2)的算法)的情况都说错了, 真的是蠢的1b, 回过头来看, 正常的方法也是可以找到的  

```
l = [1,2,3,-1,-3,0,-5]

def findd(l):
    if len(l) == 0:
        return 0
    ret = l[0]
    cur = l[0]
    for i in range(1, len(l)):
        cur += l[i]
        if(cur > ret):
            ret = cur
        elif(cur < 0):
            cur = 0

    return ret


print(findd(l))
```

O(n)的方法, 当时第一眼看到这个题的描述, 就想到了3sum, 4sum的东西, 整个人的思路完全都偏移了, 答出来的东西狗屁不通...这里想要连续子数组最大, 把连续数组看成前缀跟最后一个元素两部分, 前缀如果为负, 那么这个连续子数组就不能包含前缀, 每次使用前缀加上最后元素与当前max swap, 之后查看和是否小于0, 小于0则将前缀更新为0, 从而下次计算的连续子数组开头为下一个数  

回头再看, 估计我这两个答对了, 这个面试也是过不去的, 开始的问题答的太乱了, 但是没处理好傻子题, 是真的蠢...

最后总结一下这阶段后续面试的守则:  
>因为住在南六环, 所以别去西北上地什么的地方面试了, 路程2个半小时, 过去人已经接近个傻子  
>如果一定要去, 别在约下午两点了, 午饭的时间都用来赶路了, 没吃午饭->蠢, 如果吃了午饭, 两点的时候, 估计又困又蠢  
>如果一定要去并且在下午两点, 那么起早点, 吃个早饭  




